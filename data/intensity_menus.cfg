
// Copyright 2010 Alon Zakai ('kripken'). All rights reserved.
// This file is part of Syntensity/the Intensity Engine, an open source project. See COPYING.txt for licensing.

//echo "Intensity menus setting up"

bind ESCAPE [
    menu_key_click_trigger
    if (cleargui 1) [] [
        save_mouse_pos // Useful for New Light GUI and so forth.
        showgui main
    ]
]


// Main menu - has two forms, for logging into the master, or for entering an instance

setup_main_menu = [
//    echo "LIM:" $logged_into_master
    if ( = $logged_into_master 0 ) [
//        echo "Not logged in"
        newgui main [
            guibutton "log in..."        "show_login" "menu"
            guibar
            guibutton "plugins..."        "showgui plugins"
            guibutton "options..."        "showgui options"
            guibutton "help..."           "showgui help"
            guibutton "quit"             "quit"                 "exit"
        ]
    ]
    if ( = $logged_into_master 1 ) [
//        echo "Indeed logged in"
        newgui main [
            if ($have_master) [
                guibutton "^f2connect to lobby...^f~" "connect_to_lobby"
                guibar
                guibutton "connect to selected..." "connect_to_selected_instance"
            ]
            guibutton "local connection..." "connect 127.0.0.1 28787"
            guibutton "manual connection..." "showgui manual_connect"
            guibar
            if ( (& (= $can_edit 1) (isconnected)) ) [
                if (= (private_edit_mode) 0) [
                    guibutton "request private edit mode..." "request_private_edit_mode"
                ] [
                    guitext "(in private edit mode)"
                ]
                guibutton "restart map..." "showgui restart_map"
                guibutton "upload map..." "showgui upload"
                guibutton "editing commands..." "showgui editing"
                guibutton "export entities..." "showgui exportentities"
                guibar
            ]
            guibutton "plugins..."        "showgui plugins"
            guibutton "options..."        "showgui options"
            guibutton "special..."        "showgui special"
            guibutton "help..."           "showgui help"
            guibutton "quit"             "quit"                 "exit"
        ]
    ]
]

setup_main_menu


// Login

show_login = [
    if (strcmp $hashed_password "") [
//        echo "No previous password"
    ] [
//        echo "Noting existence of old password"
        entered_password "--------" // 8 '-'s: means "use the existing hashed password",
                                    // which we need if there was a password entered before
    ]

    showgui login
]

newgui login [
    guitext (format "master server: ^f2%1" (get_config "Network" "master_server"))

    guibar

    guilist [
        newusername = (strreplace $entered_username "-" "@") // Need to swap @ with something else, or sauer will 'act' on it on load
        true_username $newusername // Can be sent to the server: contains the "@"
        guitext "username: "
        guifield newusername 30 [
            true_username $newusername // Can be sent to the server: contains the "@"
            entered_username (strreplace $newusername "@" "-")
        ]
    ]

    guilist [
        guitext "password: "
        newpassword = $entered_password
        guifield newpassword 24 [entered_password $newpassword] 1
    ]

    guibar

    guibutton "log in" [
        newpassword = "" // FIXME: do this elsewhere as well
        "do_login" $true_username $entered_password
    ]

    if ( (| (strcmp $entered_password "") (strcmp $entered_username "") ) ) [
        guibar
        guitext "^f2(you can create a free account at www.syntensity.com)"
    ]
]



// Special

newgui special [
    if (strcmp $last_uploaded_map_asset "") [] [
        guibutton "repeat last map upload..." "repeat_upload"
    ]
]

// Help

newgui help [
    guitext "press Escape to exit a menu / go back"
    guibar
    guitext "some useful commands:"
    guitext "   M - toggle mouselook mode"
    guitext "   9 - toggle thirdperson mode"
    guitext "   mouse wheel - zoom in/out"
    guibar
    guitext "camera control vars:"
    guitext "   cameraheight, smoothcamera, cameraavoid"

    guitab about
    guitext "Syntensity - Beta"
    guitext "http://www.syntensity.com/" 
    guibar
    guitext [Licensed under the Affero GPL 3.0]
    guitext [(see README.txt and LICENSE.txt)]
    guibar
    guitext "Thanks to ^f3Cube 2^f~, Google V8, SDL, Python,"
    guitext "   Mochikit, Django, Boost, zlib"
]


// Login error

error_message ""

newgui error [
    guitext ( format "An error occurred: %1" $error_message )
]


// Options - split up into submenus for speed

macro resbutton [
    guibutton "%1x%2" "screenres %1 %2" (if (&& (= $scr_w %1) (= $scr_h %2)) [result "radio_on"] [result "radio_off"])
]

newgui options [
    guibutton "general" [ showgui general ]
    guibutton "video" [ showgui video ]
    guibutton "audio" [ showgui audio ]
    guibutton "input" [ showgui input ]
]

newgui general [
    guicheckbox "2D menus" gui2d
    guicheckbox "apply changes dialog" applydialog
    guicheckbox "blood"             blood
    guilist [
        guicheckbox "ragdoll deaths"    ragdoll
//        if $ragdoll [
//            guibar
//            guicheckbox "keep after respawn" ragdollmillis 10000
//        ]
    ]
    guitext "death velocity multiplier"
    guislider deadpush
    guilist [
        guicheckbox "fullbright player models" fullbrightmodels 50 0
        if $fullbrightmodels [
            guibar
            guiradio "subtle" fullbrightmodels 50
            guibar
            guiradio "bright" fullbrightmodels 100
            guibar
            guiradio "overbright" fullbrightmodels 150
        ]
    ]
    guicheckbox "particle text"     particletext

    guibar
    guibutton "Restore Defaults" "exec data/defaults.cfg"

    guitab "console"
    guitext "console size (lines)"
    guislider consize
    guitext "console message filter:"
    guilist [
        guilist [
            guibitfield "important information" confilter 0x01
            guibitfield "warnings" confilter 0x02
            guibitfield "errors" confilter 0x04
            guibitfield "init messages" confilter 0x10
            guibitfield "script messages" confilter 0x20
	    ]
    ]
    guitext "full console size (percent of screen)"
    guislider fullconsize
    guitext "full console message filter:"
    guilist [
        guilist [
            guibitfield "important information" fullconfilter 0x01
            guibitfield "warnings" fullconfilter 0x02
            guibitfield "errors" fullconfilter 0x04
            guibitfield "init messages" fullconfilter 0x10
            guibitfield "script messages" fullconfilter 0x20
        ]
        guibar
    ]

    guitab "autoexec.cfg"
    guitext "autoexec.cfg"
    showfileeditor "autoexec.cfg" -60 15
]

newgui video [
    guitext "performance key: 0fast~, 2moderate~, 3slow and pretty~"
    guibar
    if (&& (< $shaders 0) (= $renderpath 0)) [
        guicheckbox "2shaders		"			shaders 1 -1
    ] [
		guilist [
        	guicheckbox "2shaders		"           shaders
	    	if $shaders [
            	guibar
            	guiradio "0low detail" shaderdetail 1
            	guibar
            	guiradio "2high detail" shaderdetail 3
                //if $hasglsl [
                //    guibar
                //    guicheckbox "3GLSL only" forceglsl
                //]
	    	]
		]
    ]
    guilist [
        guitext "water		"
        guibar
        guicheckbox "2refraction"  waterrefract
        guibar
        guicheckbox "3reflection"  waterreflect
        guibar
        guicheckbox "0caustics"    caustics
        guibar
        guicheckbox "^f0animation" vertwater
    ]
	if (> $renderpath 0) [
		guilist [
			guitext "waterfalls		"
			guibar
			guicheckbox "2refraction" waterfallrefract
			guibar
			guicheckbox "0reflection" waterfallenv
		]
	]
    if (= $renderpath 0) [
        guilist [
            guicheckbox "3shadow maps	"  shadowmap
            if $shadowmap [
                guibar
                guiradio "2medium quality" shadowmapsize 9 [blurshadowmap 1]
                guibar
                guiradio "3high quality" shadowmapsize 10 [blurshadowmap 2]
            ] [
                guibar
                guicheckbox "0blob shadows" blobs
            ]
        ]
        if (>= $maxtmus 3) [
            guicheckbox "2dynamic lights  "    ffdynlights 5 0
        ]
    ] [
		guilist [
        	guicheckbox "3soft shadows	"  shadowmap
			if $shadowmap [
                guibar
        	    guiradio "2medium quality" shadowmapsize 9 [blurshadowmap 1]
    	        guibar
	            guiradio "3high quality" shadowmapsize 10 [blurshadowmap 2]
			] [
				guibar
				guicheckbox "0blob shadows" blobs
			]
    	]
    	if $glare [
        	glarepreset = 0
        	if (= $glarescale 1) [
            	if (= $blurglare 4) [glarepreset = 1]
            	if (= $blurglare 7) [glarepreset = 3]
        	]
        	if (= $glarescale 2) [
            	if (= $blurglare 3) [glarepreset = 2]
            	if (= $blurglare 7) [glarepreset = 4]
        	]
        	guilist [
            	guicheckbox "3glare			"       glare
            	guibar
            	guiradio "2subtle" glarepreset 1 [blurglare 4; glarescale 1]
            	guibar
            	guiradio "2glowy" glarepreset 2 [blurglare 3; glarescale 2]
            	guibar
            	guiradio "3soft" glarepreset 3 [blurglare 7; glarescale 1]
            	guibar
            	guiradio "3intense" glarepreset 4 [blurglare 7; glarescale 2]
        	]
    	] [
        	guicheckbox "3glare"         glare
    	]
    ]
    if $usetexrect [
        guilist [
            guicheckbox "3motion blur	" motionblur
            if $motionblur [
                guibar 
                guiradio "3subtle" motionblurscale 0.5
                guibar
                guiradio "3moderate" motionblurscale 0.65
                guibar
                guiradio "3intense" motionblurscale 0.8
            ]
        ]
    ]
    guilist [
        guicheckbox "3grass			" grass
		if $grass [
			guibar
			guiradio "2quick fade" grassdist 128
			guibar
			guiradio "2moderate fade" grassdist 256
			guibar
			guiradio "3slow fade" grassdist 512
		]
	]
    if (> $renderpath 0) [
        guilist [
            guicheckbox "0dynamic lights	"    maxdynlights 3 0
            if $maxdynlights [
                guibar
                guiradio "0medium quality" maxdynlights 3
                guibar
                guiradio "2high quality" maxdynlights 5
            ]
        ]
        guilist [
            guicheckbox "0soft explosions	" depthfx
            if $depthfx [
                guibar
                guiradio "0low quality" depthfxsize 7 [depthfxrect 0; depthfxfilter 1; blurdepthfx 1]
                guibar
                guiradio "2medium quality" depthfxsize 10 [depthfxrect 1; depthfxfilter 0; blurdepthfx 0]
                guibar
                guiradio "3high quality" depthfxsize 12 [depthfxrect 1; depthfxfilter 0; blurdepthfx 0]
            ]
        ]
	]
    guicheckbox "0glass reflection"  glassenv
    guilist [
        guicheckbox "0decals		" decals
        if $decals [
            guibar
            guiradio "0quick fade" decalfade 10000 [maxdecaltris 1024]
            guibar
            guiradio "2slow fade" decalfade 60000 [maxdecaltris 4096]
        ]
    ]
    guicheckbox "0fix t-joints (world sparklies)" filltjoints
    guilist [
        guitext "textures		"
        guibar
        guiradio "0low quality" maxtexsize 256
        guibar
        guiradio "2high quality" maxtexsize 0
    ]
    guilist [
        guitext "models		"
        guibar
        guicheckbox "0lighting"    lightmodels
        guibar
        guicheckbox "0reflection"  envmapmodels
        guibar
        guicheckbox "0glow"        glowmodels
        if (> $renderpath 0) [
            guibar
            guicheckbox "2bumpmap" bumpmodels
        ]
    ]
    guilist [
        guitext "animation		"
        guibar
        guiradio "0medium quality" matskel 1
        guibar
        guiradio "0high quality" matskel 0
    ]

    guitab    "display"
    guicheckbox "v-sync"            vsync 1 0
    guicheckbox "fullscreen"        fullscreen
    guitext "gamma (default: 100)"
    guislider gamma
    guitext "full-scene anti-aliasing (default: -1)"
    guilistslider fsaa "-1 0 2 4 8 16"
    guitext "color depth (default: 0)"
    guilistslider colorbits "0 16 24 32"
    guitext "z-buffer depth (default: 0)"
    guilistslider depthbits "0 16 24 32"
    guitext "stencil bits (default: 1)"
    guislider stencilbits
    guitext "anisotropic filtering (default: 0)"
    guilistslider aniso "0 2 4 8 16"
	guilist [
    	guicheckbox "bilinear filtering" bilinear
		guibar
		guicheckbox "trilinear filtering (mipmaps)" trilinear
	]

    guitab   "res"
    guitext "field of view (default: 100)"
    guislider fov
    guistayopen [
      guilist [
        guilist [
            guitext "4:3"
            @(resbutton 320 240)
            @(resbutton 640 480)
            @(resbutton 800 600)
            @(resbutton 1024 768)
            @(resbutton 1152 864)
            @(resbutton 1280 960)
            @(resbutton 1400 1050)
            @(resbutton 1600 1200)
            @(resbutton 1792 1344)
            @(resbutton 1856 1392)
            @(resbutton 1920 1440)
            @(resbutton 2048 1536)
            @(resbutton 2800 2100)
            @(resbutton 3200 2400)
        ]
        guibar
        guilist [
            guitext "16:10"
            @(resbutton 320 200)
            @(resbutton 640 400)
            @(resbutton 1024 640)
            @(resbutton 1280 800)
            @(resbutton 1440 900)
            @(resbutton 1600 1000)
            @(resbutton 1680 1050)
            @(resbutton 1920 1200)
            @(resbutton 2048 1280)
            @(resbutton 2560 1600)
            @(resbutton 3840 2400)
        ]
        guibar
        guilist [
            guitext "16:9"
            @(resbutton 1024 600)
            @(resbutton 1280 720)
            @(resbutton 1366 768)
            @(resbutton 1600 900)
            @(resbutton 1920 1050)
            @(resbutton 2048 1152)
            @(resbutton 3840 2160)
        ]
        guibar
        guilist [
            guitext "5:4"
            @(resbutton 600 480)
            @(resbutton 1280 1024)
            @(resbutton 1600 1280)
            @(resbutton 2560 2048)
        ]
        guibar
        guilist [
            guitext "5:3"
            @(resbutton 800 480)
            @(resbutton 1280 768)

            guibar
            guitext "Custom"
            guilist [
                customw = $scr_w
                customh = $scr_h
                guifield customw 4 [scr_w $customw]
                guifield customh 4 [scr_h $customh]
            ]
        ]
      ]
    ]
]

newgui audio [
    guitext "sound volume"
    guislider soundvol
    guitext "music volume"
    guislider musicvol
    guitext "sound channels"
    guislider soundchans
    guitext "sound frequency"
    guilistslider soundfreq "11025 22050 44100"
    guitext "sound buffer length"
    guislider soundbufferlen
    guicheckbox "Mumble positional audio" mumble
]

newgui input [
    guicheckbox "invert mouse"      invmouse

    guilist [
        guitext "mouse sensitivity: "
        newsens = $sensitivity
        guifield newsens 8 [sensitivity $newsens]
    ]

    guibar
    guitext "(basic keybinds, for anything more use the 'bind' command)"
    guitext "select action to bind and press desired keys (ESC when done):"

    guilistsplit n 2 $bindactions [
        newbinds = (concatword "newbinds" $i)
        guilist [
            guitext (tabify [@@(concatword $n ": ")] 4)
            @newbinds = (searchbinds [@@n])
            guikeyfield @newbinds -8 [
                oldbinds = (searchbinds [@@@n])
                loop i (listlen $oldbinds) [bind (at $oldbinds $i) ""]
                loop i (listlen $@@newbinds) [bind (at $@@@newbinds $i) [@@@@n]]
            ]
        ]
    ] [guibar]
]

// Plugins

newgui plugins [
    show_plugins
]

// Messages

newgui message [
    guitext $message_title
    guibar
    guitext $message_content
    guibar
    guibutton "close" "cleargui 1"
]

newgui input_dialog [
    guitext $input_title
    guibar
    guitext $input_content
    guibar
    new_input_data = $input_data
    guifield new_input_data 30 [input_data $new_input_data]
    guibar
    guibutton "submit" [
        sleep 100 [input_callback $input_data]
    ]
    guibutton "cancel" "cleargui 1"
]


//

newgui restart_map [
    guitext "Are you sure you want to restart the map without uploading it?"
    guitext "(Local changes may be lost, as the current map version on the asset"
    guitext "server is retrieved)"
    guibar
    guibutton "restart" "restart_map"
    guibutton "cancel" "cleargui 1"
]

newgui upload [
    guitext "Are you sure you want to upload the map to the server?"
    guitext "(Entities will be written to entities.js before upload)"
    guibar
    guibutton "upload" "do_upload"
    guibutton "cancel" "cleargui 1"
]

//

newgui can_quit [
    guitext "Editing changes have been made. If you quit"
    guitext "now then they will be lost. Are you sure you"
    guitext "want to quit?"
    guibar
    guibutton "yes" "force_quit"
    guibutton "no" "cleargui 1"
]

//

newgui manual_connect [
    guilist [
        guitext "IP address: "
        guifield manual_server_ip 30 []
    ]

    guilist [
        guitext "Port: "
        guifield manual_server_port 30 []
    ]

    guibar

    guibutton "connect" [
        connect $manual_server_ip $manual_server_port
    ]
]

//

// Default music - only once, for first main menu (for now)
//music "music/Pal_Zoltan_Illes__Rolling_Militia.ogg"


// Useful commands

upload_asset = [
    run_python (format "upload_asset_by_location('%1')" $arg1)
]

clearallents = [entfind *; delent]

